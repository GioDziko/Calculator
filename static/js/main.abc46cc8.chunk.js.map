{"version":3,"sources":["components/calculator.js","App.js","reportWebVitals.js","index.js"],"names":["Calculator","props","handleClick","e","innerText","target","state","lastPressed","currentNum","prevNum","operation","finalScore","Number","isNaN","setState","undefined","display_score","includes","parseFloat","convert","final","convert_1","final_1","toString","eval","answer","className","this","onClick","style","backgroundColor","borderRadius","flex","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.abc46cc8.chunk.js","sourcesContent":["import React,{Component} from \"react\";\r\nimport \"./css/calculator.css\";\r\n\r\n\r\nexport default class Calculator extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            lastPressed:undefined,\r\n            currentNum:\"0\",\r\n            prevNum:undefined,\r\n            operation:undefined,\r\n            display_score:undefined\r\n        }\r\n    }\r\n    handleClick=(e)=>{\r\n        const{innerText}=e.target;\r\n        const{lastPressed , currentNum , prevNum,operation,finalScore}=this.state;\r\n        if(!Number.isNaN(Number(innerText))){\r\n            if(currentNum===\"0\" ){\r\n                this.setState({\r\n                    currentNum:innerText\r\n                })\r\n            }else{\r\n                this.setState({\r\n                    currentNum:currentNum+innerText\r\n                })\r\n            }\r\n        }\r\n        switch(innerText){\r\n            case \"C\":{\r\n                this.setState({\r\n                    currentNum:\"0\",\r\n                    prevNum:undefined,\r\n                    operation:undefined,\r\n                    display_score:\"\"\r\n                });\r\n                break;\r\n            }\r\n            case \".\":{\r\n                if(!currentNum.includes(\".\")){\r\n                    this.setState({\r\n                        currentNum:currentNum+innerText\r\n                    })\r\n                }\r\n                break;\r\n            }\r\n\r\n            case \"+-\":{\r\n                if(parseFloat(currentNum)<0){\r\n                    const convert=parseFloat(currentNum)*2\r\n                    const final=parseFloat(currentNum)-convert;\r\n                    this.setState({\r\n                        \r\n                        currentNum:final\r\n                    })\r\n                    \r\n                }else{\r\n                    \r\n                    const convert_1=parseFloat(currentNum)*2\r\n                    const final_1=currentNum+\"-\"+convert_1.toString();\r\n                    this.setState({\r\n                        currentNum:eval(final_1)\r\n                    })\r\n                }\r\n            }\r\n\r\n            default:{\r\n                if(Number.isNaN(Number(innerText)) && innerText!==\"+-\" && innerText!==\".\" && innerText!==\"=\"){\r\n                    this.setState({\r\n                        operation:innerText,\r\n                        prevNum:currentNum,\r\n                        currentNum:\"0\"\r\n                    })\r\n                              \r\n                }\r\n                if(innerText===\"=\"){\r\n                   \r\n                    const answer=prevNum+operation+currentNum\r\n                    this.setState({\r\n                        currentNum:eval(answer)\r\n                    })\r\n                }\r\n                \r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            lastPressed:innerText\r\n        })\r\n        \r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"Calculator\" >\r\n                <div className=\"display\" >\r\n                    <p className=\"equation\" >\r\n                        {this.state.display_score}\r\n                    </p>\r\n                    <p>\r\n                        {this.state.currentNum}\r\n                    </p>\r\n                </div>\r\n                <div className=\"button-container\" >\r\n                    <button onClick={this.handleClick} style={{backgroundColor:\"orange\"}} >C</button>\r\n                    <button onClick={this.handleClick} style={{backgroundColor:\"orange\"}} >+</button>\r\n                    <button onClick={this.handleClick} style={{backgroundColor:\"orange\"}} >-</button>\r\n                    <button onClick={this.handleClick} style={{backgroundColor:\"orange\"}} >/</button>\r\n                    <button onClick={this.handleClick} style={{backgroundColor:\"gray\"}} >1</button>\r\n                    <button onClick={this.handleClick} style={{backgroundColor:\"gray\"}} >2</button>\r\n                    <button onClick={this.handleClick} style={{backgroundColor:\"gray\"}} >3</button>\r\n                    <button onClick={this.handleClick} style={{backgroundColor:\"orange\"}} >*</button>\r\n                    <button onClick={this.handleClick} style={{backgroundColor:\"gray\"}} >4</button>\r\n                    <button onClick={this.handleClick} style={{backgroundColor:\"gray\"}} >5</button>\r\n                    <button onClick={this.handleClick} style={{backgroundColor:\"gray\"}} >6</button>\r\n                    <button onClick={this.handleClick} style={{backgroundColor:\"orange\"}} >+-</button>\r\n                    <button onClick={this.handleClick} style={{backgroundColor:\"gray\"}} >7</button>\r\n                    <button onClick={this.handleClick} style={{backgroundColor:\"gray\"}} >8</button>\r\n                    <button onClick={this.handleClick} style={{backgroundColor:\"gray\"}} >9</button>\r\n                    <button onClick={this.handleClick} style={{backgroundColor:\"orange\"}} >.</button>\r\n                    <button onClick={this.handleClick} style={{borderRadius:\"5px\",flex:\"1 1 75%\", backgroundColor:\"gray\"}} className=\"null\" >0</button>\r\n                    <button onClick={this.handleClick} style={{backgroundColor:\"orange\"}} className=\"equal\" >=</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import './components/css/App.css';\nimport Calculator from \"./components/calculator\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\" >\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}